"""first revision

Revision ID: 0d99d1b2e865
Revises: 
Create Date: 2024-06-06 19:07:49.066754

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '0d99d1b2e865'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
                    sa.Column('account_id', sa.Integer(), nullable=False),
                    sa.Column('email', sa.String(length=30), nullable=False),
                    sa.Column('password', sa.String(length=200), nullable=False),
                    sa.Column('role', sa.Enum('admin', 'student', 'teacher', name='role'), nullable=False),
                    sa.Column('is_deactivated', sa.Boolean(), server_default='0', nullable=True),
                    sa.PrimaryKeyConstraint('account_id'),
                    sa.UniqueConstraint('email')
                    )
    op.create_table('tags',
                    sa.Column('tag_id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=45), nullable=False),
                    sa.PrimaryKeyConstraint('tag_id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('admins',
                    sa.Column('admin_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['admin_id'], ['accounts.account_id'], ),
                    sa.PrimaryKeyConstraint('admin_id')
                    )
    op.create_table('students',
                    sa.Column('student_id', sa.Integer(), nullable=False),
                    sa.Column('first_name', sa.String(length=50), nullable=False),
                    sa.Column('last_name', sa.String(length=50), nullable=False),
                    sa.Column('profile_picture', sa.LargeBinary(), nullable=True),
                    sa.Column('is_premium', sa.Boolean(), server_default='0', nullable=True),
                    sa.ForeignKeyConstraint(['student_id'], ['accounts.account_id'], ),
                    sa.PrimaryKeyConstraint('student_id')
                    )
    op.create_table('teachers',
                    sa.Column('teacher_id', sa.Integer(), nullable=False),
                    sa.Column('first_name', sa.String(length=50), nullable=False),
                    sa.Column('last_name', sa.String(length=50), nullable=False),
                    sa.Column('phone_number', sa.String(length=30), nullable=True),
                    sa.Column('linked_in', sa.String(length=200), nullable=True),
                    sa.Column('profile_picture', sa.LargeBinary(), nullable=True),
                    sa.ForeignKeyConstraint(['teacher_id'], ['accounts.account_id'], ),
                    sa.PrimaryKeyConstraint('teacher_id')
                    )
    op.create_table('courses',
                    sa.Column('course_id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(length=50), nullable=False),
                    sa.Column('description', sa.String(length=250), nullable=False),
                    sa.Column('objectives', sa.String(length=250), nullable=False),
                    sa.Column('owner_id', sa.Integer(), nullable=False),
                    sa.Column('is_premium', sa.Boolean(), server_default='0', nullable=True),
                    sa.Column('is_hidden', sa.Boolean(), server_default='0', nullable=True),
                    sa.Column('home_page_picture', sa.LargeBinary(), nullable=True),
                    sa.Column('rating', sa.Float(), nullable=True),
                    sa.Column('people_rated', sa.Integer(), server_default='0', nullable=True),
                    sa.ForeignKeyConstraint(['owner_id'], ['teachers.teacher_id'], ),
                    sa.PrimaryKeyConstraint('course_id'),
                    sa.UniqueConstraint('title')
                    )
    op.create_table('courses_tags',
                    sa.Column('course_id', sa.Integer(), nullable=False),
                    sa.Column('tag_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ),
                    sa.ForeignKeyConstraint(['tag_id'], ['tags.tag_id'], ),
                    sa.PrimaryKeyConstraint('course_id', 'tag_id')
                    )
    op.create_table('sections',
                    sa.Column('section_id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(length=45), nullable=False),
                    sa.Column('content_type', sa.Enum('video', 'image', 'text', 'quiz', name='contenttype'),
                              nullable=False),
                    sa.Column('external_link', sa.String(length=500), nullable=True),
                    sa.Column('description', sa.String(length=250), nullable=True),
                    sa.Column('course_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ),
                    sa.PrimaryKeyConstraint('section_id')
                    )
    op.create_table('students_courses',
                    sa.Column('student_id', sa.Integer(), nullable=False),
                    sa.Column('course_id', sa.Integer(), nullable=False),
                    sa.Column('status', sa.Integer(), server_default=sa.text('1'), nullable=False),
                    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ),
                    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
                    sa.PrimaryKeyConstraint('student_id', 'course_id')
                    )
    op.create_table('students_ratings',
                    sa.Column('student_id', sa.Integer(), nullable=False),
                    sa.Column('course_id', sa.Integer(), nullable=False),
                    sa.Column('rating', sa.Float(), nullable=False),
                    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ),
                    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
                    sa.PrimaryKeyConstraint('student_id', 'course_id')
                    )
    op.create_table('students_sections',
                    sa.Column('student_id', sa.Integer(), nullable=False),
                    sa.Column('section_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['section_id'], ['sections.section_id'], ),
                    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
                    sa.PrimaryKeyConstraint('student_id', 'section_id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('students_sections')
    op.drop_table('students_ratings')
    op.drop_table('students_courses')
    op.drop_table('sections')
    op.drop_table('courses_tags')
    op.drop_table('courses')
    op.drop_table('teachers')
    op.drop_table('students')
    op.drop_table('admins')
    op.drop_table('tags')
    op.drop_table('accounts')
    # ### end Alembic commands ###
